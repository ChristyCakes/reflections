What happens when you initialize a repository? Why do you need to do it?
git init initializes it, creating a repository without any commits even if there are files present. You need to do to create the repository in order to start recording commits.




How is the staging area different from the working directory and the repository?
it is an intermediate area between the two



What value do you think it offers?
It allows you to check git status before and after committing to keep track of what's in each directory,area, and repository




How can you use the staging area to make sure you have one commit per logical
change?
You can use the 'git status' command to see what files you have moved there before making any commits




What are some situations when branches would be helpful in keeping your history
organized? 
anytime you want to make a change but also keep current version as your main or frequently used alternate
example: making an alternate version such as in a different language or different difficulty level, trying an experimental feature


How would branches help?
They help by staying organized within git
They offer versions with different purposes
They allow you to switch between tasks on a project




How do the diagrams help you visualize the branch structure?
Diagrams help show when branches started to keep work flow organized.




What is the result of merging two branches together? 
The result is one branch with all changes made included.


Why do we represent it in
the diagram the way we do?
Because drawing 2 lines clarifies that it was a merge, not just another commit




What are the pros and cons of Git's automatic merging vs. always doing merges 
manually?
Automatic merging is quick and easy with one command: git merge branchname (after checking out the branch you want to merge into). 
But if you're working with others, manual is necessary to choose the correct changes. You'll need more commands: checkout branch, merge, then open the conflict file,
make changes, save, git status to see 'both modified', git add that file, git status to see 'conflicts resolved',  git commit, then git log to see merge commit.